<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
         updateCheck="false">
    <!--
    diskStore：为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘
    的缓存位置。参数解释如下：
    user.home – ⽤户主⽬录
    user.dir – ⽤户当前⼯作⽬录
    java.io.tmpdir – 默认临时⽂件路径
    -->
    <diskStore path="./tmpdir/Tmp_EhCache"/>
    <defaultCache
            eternal="false"
            maxElementsInMemory="10000"
            overflowToDisk="false"
            diskPersistent="false"
            timeToIdleSeconds="1800"
            timeToLiveSeconds="259200"
            memoryStoreEvictionPolicy="LRU"/>
    <cache
            name="cloud_user"
            eternal="false"
            maxElementsInMemory="5000"
            overflowToDisk="false"
            diskPersistent="false"
            timeToIdleSeconds="1800"
            timeToLiveSeconds="1800"
            memoryStoreEvictionPolicy="LRU"/>
    <!--
    defaultCache：默认缓存策略，当ehcache找不到定义的缓存时，则使⽤
    这个缓存策略。只能定义⼀个。
    -->
    <!--
    name:缓存名称。
    maxElementsInMemory:缓存最⼤数⽬
    maxElementsOnDisk：硬盘最⼤缓存个数。
    eternal:对象是否永久有效，⼀但设置了，timeout将不起作⽤。
    overflowToDisk:是否保存到磁盘，当系统当机时
    timeToIdleSeconds:设置对象在失效前的允许闲置时间（单位：秒）。仅
    当eternal=false对象不是永久有效时使⽤，可选属性，默认值是0，也就是可闲置
    时间⽆穷⼤。
    timeToLiveSeconds:设置对象在失效前允许存活时间（单位：秒）。最⼤
    时间介于创建时间和失效时间之间。仅当eternal=false对象不是永久有效时使⽤，
    默认是0.，也就是对象存活时间⽆穷⼤。
    diskPersistent：是否缓存虚拟机重启期数据 Whether the disk
    store persists between restarts of the Virtual Machine. The
    default value is false.
    diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存
    区⼤⼩。默认是30MB。每个Cache都应该有⾃⼰的⼀个缓冲区。
    diskExpiryThreadIntervalSeconds：磁盘失效线程运⾏时间间隔，默认
    是120秒。
    memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，
    Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使⽤）。你可以
    设置为FIFO（先进先出）或是LFU（较少使⽤）。
    clearOnFlush：内存数量最⼤时是否清除。
    memoryStoreEvictionPolicy:可选策略有：LRU（最近最少使⽤，默认策
    略）、FIFO（先进先出）、LFU（最少访问次数）。
    FIFO，first in first out，这个是⼤家最熟的，先进先出。
    LFU， Less Frequently Used，就是上⾯例⼦中使⽤的策略，直⽩⼀点就
    是讲⼀直以来最少被使⽤的。如上⾯所讲，缓存的元素有⼀个hit属性，hit值最⼩的
    将会被清出缓存。
    LRU，Least Recently Used，最近最少使⽤的，缓存的元素有⼀个时间
    戳，当缓存容量满了，⽽⼜需要腾出地⽅来缓存新的元素的时候，那么现有缓存元素中
    时间戳离当前时间最远的元素将被清出缓存。
    -->
</ehcache>