<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pn.dao.TeacherMapper">
<select id="getTeacher" resultType="Teacher">
    select  * from mybatis.teacher
</select>
    <!--按结果嵌套查询-->
    <select id="getTeacher2" resultMap="TeacherStudent">
        select s.id sid, s.name sname, t.name tname,t.id tid
        from student s,teacher t
        where s.tid = t.id and t.id =#{tid}
    </select>
    <resultMap id="TeacherStudent" type="Teacher">
    <result property="id" column="tid"/>
    <result property="name" column="tname"/>
        <!--复杂的属性，我们需要单独处理 对象： association 集合：
    collection
    javaType="" 指定属性的类型！
    集合中的泛型信息，我们使⽤ofType获取
    -->
<!--  students Teacher实体类下的包含关系-->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>

<!--子查询-->
    <select id="getTeacher3" resultMap="TeacherStudent2">
        select * from mybatis.teacher where id = #{tid}
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
<!--    ofType⽤来指定映射到List或者集合中的映射类型    实体类中的类型javaType-->
        <collection property="students" javaType="ArrayList"
                    ofType="Student" select="getStudentByTeacherId"
                    column="id"/>
</resultMap>
    <select id="getStudentByTeacherId" resultType="Student">
    select * from mybatis.student where tid = #{tid}
</select>
</mapper>