<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pn.dao.StudentMapper">
    <!--
思路:
1. 查询所有的学⽣信息
2. 根据查询出来的学⽣的tid，寻找对应的⽼师！ ⼦查询隐形连接两个表
-->
    <select id="getStudent" resultMap="StudentTeacher">
        select * from student
    </select>
    <resultMap id="StudentTeacher" type="Student">
        <result property="id" column="id"/>
    <result property="name" column="name"/>
    <!--复杂的属性，我们需要单独处理 对象： association 集合：
    collection -->
    <association property="teacher" column="tid"
                 javaType="Teacher" select="getTeacher"/>
</resultMap>
    <select id="getTeacher" resultType="Teacher">
    select * from teacher where id = #{id}
</select>
<!--    联表嵌套处理-->
    <!--按照结果嵌套处理-->
    <select id="getStudent2" resultMap="StudentTeacher2">
        select s.id sid,s.name sname,t.name tname
        from student s,teacher t
        where s.tid = t.id;
    </select>
    <resultMap id="StudentTeacher2" type="Student">
        <result property="id" column="sid"/>
    <result property="name" column="sname"/>
    <association property="teacher" javaType="Teacher">
        <result property="name" column="tname"/>
    </association>
</resultMap>

</mapper>